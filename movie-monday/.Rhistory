install.packages("googledrive")
drive_find(n_max = 50)
library("googledrive")
drive_find(n_max = 50)
ttt <- drive_auth()
saveRDS(ttt, "ttt.rds")
drive_auth("ttt.rds") # from .rds file
library("googledrive")
drive_auth("ttt.rds") # from .rds file
library("googledrive")
# Use Oauth token to authorize access
drive_auth("ttt.rds") # from .rds file
drive_deauth(clear_cache = TRUE, verbose = TRUE)
library("googledrive")
# Use Oauth token to authorize access
drive_auth("ttt.rds") # from .rds file
movie_ratings <- drive_get(id = "1sq1iWEB0aF3QJhw1_No9L3b_7s8ghjgcuD7OVyz46RI")
View(movie_ratings)
movie_ratings <- drive_download(id = "1sq1iWEB0aF3QJhw1_No9L3b_7s8ghjgcuD7OVyz46RI", type = "csv"))
movie_ratings <- drive_download(id = "1sq1iWEB0aF3QJhw1_No9L3b_7s8ghjgcuD7OVyz46RI", type = "csv")
movie_ratings <- drive_download("Movie Mondays", type = "csv")
View(movie_ratings)
library(readr)
Movie_Mondays <- read_csv("Movie Mondays.csv",
col_types = cols(X43 = col_skip(), X44 = col_skip()
,X45 = col_skip(), X46 = col_skip()
,X47 = col_skip(), X48 = col_skip()
,X49 = col_skip()),
skip = 5)
warnings()
View(Movie_Mondays)
movie_ratings <- drive_download("Movie Mondays", type = "csv")
Movie_Mondays <- read_csv("Movie Mondays.csv",
col_types = cols(X1 = 'Date', X2 = 'Title'
X17 = col_skip(), X18 = col_skip(),
X43 = col_skip(), X44 = col_skip()
,X45 = col_skip(), X46 = col_skip()
,X47 = col_skip(), X48 = col_skip()
,X49 = col_skip()),
skip = 5)
library(readr)
Movie_Mondays <- read_csv("Movie Mondays.csv",
col_types = cols(X1 = 'Date', X2 = 'Title',
X17 = col_skip(), X18 = col_skip(),
X43 = col_skip(), X44 = col_skip()
,X45 = col_skip(), X46 = col_skip()
,X47 = col_skip(), X48 = col_skip()
,X49 = col_skip()),
skip = 5)
library(readr)
Movie_Mondays <- read_csv("Movie Mondays.csv",
col_types = cols(X17 = col_skip(), X18 = col_skip(),
X43 = col_skip(), X44 = col_skip()
,X45 = col_skip(), X46 = col_skip()
,X47 = col_skip(), X48 = col_skip()
,X49 = col_skip()),
skip = 5)
colnames(Movie_Mondays)[1] <- 'Date'
colnames(Movie_Mondays)[2] <- 'Title'
View(Movie_Mondays)
Movie_Mondays[complete.cases(Movie_Mondays), ]
Movie_Mondays <- Movie_Mondays[complete.cases(Movie_Mondays), ]
View(Movie_Mondays)
library(readr)
Movie_Mondays <- read_csv("Movie Mondays.csv",
col_types = cols(X17 = col_skip(), X18 = col_skip(),
X43 = col_skip(), X44 = col_skip()
,X45 = col_skip(), X46 = col_skip()
,X47 = col_skip(), X48 = col_skip()
,X49 = col_skip()),
skip = 5)
colnames(Movie_Mondays)[1] <- 'Date'
colnames(Movie_Mondays)[2] <- 'Title'
na.omit(Movie_Mondays, cols='Title')
Movie_Mondays <- na.omit(Movie_Mondays, cols='Title')
library(readr)
Movie_Mondays <- read_csv("Movie Mondays.csv",
col_types = cols(X17 = col_skip(), X18 = col_skip(),
X43 = col_skip(), X44 = col_skip()
,X45 = col_skip(), X46 = col_skip()
,X47 = col_skip(), X48 = col_skip()
,X49 = col_skip()),
skip = 5)
colnames(Movie_Mondays)[1] <- 'Date'
colnames(Movie_Mondays)[2] <- 'Title'
Movie_Mondays <- na.omit(Movie_Mondays, cols="Date")
View(Movie_Mondays)
library(readr)
Movie_Mondays <- read_csv("Movie Mondays.csv",
col_types = cols(X17 = col_skip(), X18 = col_skip(),
X43 = col_skip(), X44 = col_skip()
,X45 = col_skip(), X46 = col_skip()
,X47 = col_skip(), X48 = col_skip()
,X49 = col_skip()),
skip = 5)
colnames(Movie_Mondays)[1] <- 'Date'
colnames(Movie_Mondays)[2] <- 'Title'
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
drop_na(Movie_Mondays,'Title')
drop_na(Movie_Mondays,'Date')
Movie_Mondays <- drop_na(Movie_Mondays,'Date')
View(Movie_Mondays)
myData <- read.table('https://datasets.imdbws.com/title.basics.tsv.gz')
temp <- tempfile()
download.file("https://datasets.imdbws.com/title.basics.tsv.gz",temp)
data <- read.table(gz(temp, "title.basics.tsv"))
unlink(temp)
data <- read.table(gzfile(temp, "title.basics.tsv"))
data <- read.table(unzip(temp, "title.basics.tsv"))
data <- read.table(unz(temp, "title.basics.tsv"))
data <- read.table(untar(temp, "title.basics.tsv"))
untar(temp, "title.basics.tsv")
temp <- tempfile()
download.file("https://datasets.imdbws.com/title.basics.tsv.gz",temp)
data <- read.table(untar(temp, "title.basics.tsv"))
unlink(temp)
myData <- read.table("https://datasets.imdbws.com/title.basics.tsv.gz")
myData <- read.tsv("https://datasets.imdbws.com/title.basics.tsv.gz")
myData <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz")
View(myData)
head(imdbtitles[imdbtitles$titleType=='movie', ])
imdbtitles <- myData
imdbtitles <- head(imdbtitles[imdbtitles$titleType=='movie', ])
View(imdbtitles)
imdbtitles <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz")
# Filter to only movies
imdbtitles <- head(imdbtitles[imdbtitles$titleType=='movie', ])
imdbtitles <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz")
head(imdbtitles[imdbtitles$titleType=='movie', ])
imdbtitles[imdbtitles$titleType=='movie', ])
imdbtitles[imdbtitles$titleType=='movie', ]
imdbtitles <- imdbtitles[imdbtitles$titleType=='movie', ]
joined <- merge(Movie_Mondays,imdbtitles, by.x ='Title', by.y = 'primaryTitle', all.x = TRUE)
View(joined)
movie_ratings <- drive_download("Movie Mondays", type = "csv")
movie_ratings <- drive_download("Movie Mondays", type = "csv", overwrite = TRUE)
movie_ratings <- drive_download("Movie Mondays", type = "csv", overwrite = TRUE)
Movie_Mondays <- read_csv("Movie Mondays.csv",
col_types = cols(X1 = col_date(format = "%m/%d/%Y"),
X17 = col_skip(), X18 = col_skip(),
X43 = col_skip(), X44 = col_skip()
,X45 = col_skip(), X46 = col_skip()
,X47 = col_skip(), X48 = col_skip()
,X49 = col_skip()),
skip = 5)
colnames(Movie_Mondays)[1] <- 'Date'
colnames(Movie_Mondays)[2] <- 'Title'
# Clear ugly bottom rows
library(tidyr)
Movie_Mondays <- drop_na(Movie_Mondays,'Date')
View(Movie_Mondays)
joined <- merge(Movie_Mondays,imdbtitles, by.x = c('Title','Year'), by.y = c('primaryTitle','startYear'), all.x = TRUE)
View(joined)
View(Movie_Mondays)
imdbtitles <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz")
View(imdbtitles)
imdbtitles <- imdbtitles[imdbtitles$titleType=='movie', ]
imdbtitles[!duplicated(imdbtitles), ]
imdbtitles2 <- imdbtitles[!duplicated(imdbtitles), ]
View(imdbtitles2)
imdbtitles <- imdbtitles[!duplicated(imdbtitles), ]
joined <- merge(Movie_Mondays,imdbtitles, by.x = c('Title','Year'), by.y = c('primaryTitle','startYear'), all.x = TRUE)
View(joined)
joined <- merge(Movie_Mondays,imdbtitles, by.x = c(tolower('Title'),'Year'), by.y = c(tolower('primaryTitle'),'startYear'), all.x = TRUE)
library(googledrive)
library(dplyr)
joined <- left_join(Movie_Mondays,imdbtitles, by.x = c('Title','Year'), by.y = c('primaryTitle','startYear'), all.x = TRUE)
joined <- left_join(Movie_Mondays,imdbtitles, by = c('Title' = 'primaryTitle', 'Year' = 'startYear'))
View(joined)
imdbtitletest <- imdbtitles[imdbtitles$primaryTitle=='Coco']
imdbtitletest <- imdbtitles[imdbtitles$primaryTitle=='Coco',]
View(imdbtitletest)
imdbtitles[imdbtitles$primaryTitle=='Coco' && imdbtitles$genres=='Horror',]
imdbtitletest <- imdbtitles[imdbtitles$primaryTitle=='Coco' && imdbtitles$genres=='Horror',]
imdbtitletest <- imdbtitles[imdbtitles$primaryTitle=='Coco',]
imdbtitletest <- filter(imdbtitles, primaryTitle == 'Coco' & genre == 'Horror')
imdbtitletest <- filter(imdbtitles, primaryTitle == 'Coco' & genres == 'Horror')
imdbtitletest <- filter(imdbtitles, primaryTitle == 'Coco' & genres != 'Horror')
imdbtitletest <- filter(imdbtitles, primaryTitle == 'Coco' & genres == 'Horror')
View(joined)
imdbtitletest <- filter(imdbtitles,
#Coco
tconst != 'tt7002100',
#Icarus
tconst != 'tt6687948'
)
imdbtitletest <- filter(imdbtitles,
#Coco
tconst == 'tt7002100',
#Icarus
tconst == 'tt6687948'
)
#Special filters for bad IMDB matches
imdbtitletest <- filter(imdbtitles,
#Coco
tconst == 'tt7002100',
#Icarus
tconst == 'tt6687948'
)
imdbtitletest <- filter(imdbtitles,
#Coco
tconst == 'tt7002100',
#Icarus
tconst == 'tt6687948'
)
imdbtitletest <- filter(imdbtitles,
#Coco
tconst == 'tt7002100' |
#Icarus
tconst == 'tt6687948'
)
imdbtitles <- filter(imdbtitles,
#Coco
tconst != 'tt7002100' &
#Icarus
tconst != 'tt6687948'
)
joined <- left_join(Movie_Mondays,imdbtitles, by = c('Title' = 'originalTitle', 'Year' = 'startYear'))
View(joined)
View(imdbtitles)
joined <- left_join(Movie_Mondays,imdbtitles, by = c('Title' = 'primaryTitle', 'Year' = 'startYear'))
imdbfull <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz")
imdbfull <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz")
library(googledrive)
library(readr)
library(tidyr)
library(dplyr)
imdbfull <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz")
View(imdbfull)
filter(imdbfull, grepl('Llewyn', primaryTitle))
joined <- left_join(Movie_Mondays,imdbfull, by = c('Title' = 'primaryTitle', 'Year' = 'startYear'))
View(joined)
joined <- left_join(Movie_Mondays,imdbtitles, by = c('Title' = 'primaryTitle', 'Year' = 'startYear'))
filter(imdbfull, grepl('Inside Llewyn', primaryTitle))
glimpse(filter(imdbfull, grepl('Inside Llewyn', primaryTitle)))
notjoined <- filter(joined,is.na(titleType))
View(notjoined)
filter(imdbfull, grepl('When Harry Met Sally', primaryTitle))
View(imdbfull)
glimpse(filter(imdbfull, grepl('Handmaiden', primaryTitle)))
glimpse(filter(imdbfull, grepl('The Handmaiden', primaryTitle)))
(filter(imdbfull, primaryTitle = 'The Handmaiden' & startYear = '2016'))
(filter(imdbfull, primaryTitle = "The Handmaiden" & startYear = "2016"))
(filter(imdbfull, primaryTitle == "The Handmaiden" & startYear == "2016"))
(filter(imdbfull, ttconst == 'tt4016934'))
(filter(imdbfull, tconst == 'tt4016934'))
filter(imdbfull, tconst == 'tt4016934')
filter(imdbfull, tconst == tt4016934)
filter(imdbfull, tconst == 'tt4016934')
filter(imdbfull, tconst == 'tt1065073')
filter(imdbfull, tconst == 'tt0783233')
filter(imdbfull, tconst == 'tt1065073')
imdbfull <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz")
warnings()
download.file("https://datasets.imdbws.com/title.basics.tsv.gz")
download.file("https://datasets.imdbws.com/title.basics.tsv.gz","titles.tsv")
download.file("https://datasets.imdbws.com/title.basics.tsv.gz","title.basics.tsv.gz")
imdbtitles <- read_tsv("title.basics.tsv")
imdbtitles <- imdbtitles[imdbtitles$titleType=='movie', ]
imdbtitles <- imdbtitles[!duplicated(imdbtitles), ]
#Special filters for bad IMDB matches -- Icarus and Coco
imdbtitles <- filter(imdbtitles,
#Coco
tconst != 'tt7002100' &
#Icarus
tconst != 'tt6687948'
)
joined <- left_join(Movie_Mondays,imdbtitles, by = c('Title' = 'primaryTitle', 'Year' = 'startYear'))
imdbfull <- read_tsv("title.basics.tsv")
filter(imdbfull, tconst == 'tt1065073')
imdbtitles <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz", locale = locale(encoding = 'ISO-8859-1'))
imdbtitles <- imdbtitles[imdbtitles$titleType=='movie', ]
imdbtitles <- imdbtitles[!duplicated(imdbtitles), ]
#Special filters for bad IMDB matches -- Icarus and Coco
imdbtitles <- filter(imdbtitles,
#Coco
tconst != 'tt7002100' &
#Icarus
tconst != 'tt6687948'
)
imdbtitles$primaryTitle <- tolower(imdbtitles$primaryTitle)
joined <- left_join(Movie_Mondays,imdbtitles, by = tolower(c('Title' = 'primaryTitle', 'Year' = 'startYear')))
library(googledrive)
library(readr)
library(tidyr)
library(dplyr)
# Left join data to movie ratings, based on title and year
joined <- left_join(Movie_Mondays,imdbtitles, by = tolower(c('Title' = 'primaryTitle', 'Year' = 'startYear')))
library(googledrive)
library(readr)
library(tidyr)
library(dplyr)
# Use Oauth token to authorize access
drive_auth("ttt.rds") # from .rds file
## Download Sheet as csv, explicit type
movie_ratings <- drive_download("Movie Mondays", type = "csv", overwrite = TRUE)
Movie_Mondays <- read_csv("Movie Mondays.csv",
col_types = cols(X1 = col_date(format = "%m/%d/%Y"),
X17 = col_skip(), X18 = col_skip(),
X43 = col_skip(), X44 = col_skip()
,X45 = col_skip(), X46 = col_skip()
,X47 = col_skip(), X48 = col_skip()
,X49 = col_skip()),
skip = 5)
colnames(Movie_Mondays)[1] <- 'Date'
colnames(Movie_Mondays)[2] <- 'Title'
# Clear ugly bottom rows
Movie_Mondays <- drop_na(Movie_Mondays,'Date')
# Bring in IMDB data
imdbtitles <- read_tsv("https://datasets.imdbws.com/title.basics.tsv.gz", locale = locale(encoding = 'ISO-8859-1'))
# Filter to only 'movies' and remove duplicate rows
imdbtitles <- imdbtitles[imdbtitles$titleType=='movie', ]
imdbtitles <- imdbtitles[!duplicated(imdbtitles), ]
#Special filters for bad IMDB matches -- Icarus and Coco
imdbtitles <- filter(imdbtitles,
#Coco
tconst != 'tt7002100' &
#Icarus
tconst != 'tt6687948'
)
# Left join data to movie ratings, based on title and year
joined <- left_join(Movie_Mondays,imdbtitles, by = tolower(c('Title' = 'primaryTitle', 'Year' = 'startYear')))
last_error()
rlang::last_error()
View(Movie_Mondays)
joined <- Movie_Mondays %>% left_join(imdbtitles, by = tolower(c('Title' = 'primaryTitle', 'Year' = 'startYear')))
joined <- Movie_Mondays %>% left_join(imdbtitles, by = tolower(c("Title" = "primaryTitle", "Year" = "startYear")))
joined <- left_join(Movie_Mondays, imdbtitles, by = c("Title" = "primaryTitle", "Year" = "startYear"))
imdbtitles$primaryTitle <- tolower(imdbtitles$primaryTitle)
Movie_Mondays$Title <- tolower(Movie_Mondays$Title)
joined <- left_join(Movie_Mondays, imdbtitles, by = c("Title" = "primaryTitle", "Year" = "startYear"))
View(notjoined)
notjoined <- filter(joined, is.na(joined$originalTitle))
View(imdbfull)
install.packages("fuzzyjoin")
joined <- Movie_Mondays %<% stringdist_left_join(imdbtitles, by = c("Title" = "primaryTitle", "Year" = "startYear"))
joined <- Movie_Mondays %>% stringdist_left_join(imdbtitles, by = c("Title" = "primaryTitle", "Year" = "startYear"))
library(fuzzyjoin)
# Left join data to movie ratings, based on title and year
joined <- Movie_Mondays %>% stringdist_left_join(imdbtitles, by = c("Title" = "primaryTitle", "Year" = "startYear"))
# Left join data to movie ratings, based on title and year
joined <- Movie_Mondays %>% stringdist_left_join(imdbfull, by = c("Title" = "primaryTitle", "Year" = "startYear"))
library(readr)
vehicle_registration_flat_file_SOS <- read_csv("~/Github clones/data-projects/car-registration-voters/data.world/vehicle-registration-flat-file-SOS.csv")
View(vehicle_registration_flat_file_SOS)
library(tidyr)
filter(vehicle_registration_flat_file_SOS$city)
portland <- filter(vehicle_registration_flat_file_SOS,vehicle_registration_flat_file_SOS$city ='Portland')
portland <- filter(vehicle_registration_flat_file_SOS, vehicle_registration_flat_file_SOS$city = 'Portland')
portland <- filter(vehicle_registration_flat_file_SOS, vehicle_registration_flat_file_SOS$city == 'Portland')
portland <- filter(vehicle_registration_flat_file_SOS$city, vehicle_registration_flat_file_SOS$city == 'Portland')
portland %>% select(city,make,model,count) %>% filter(vehicle_registration_flat_file_SOS$city == 'Portland')
library(dplyr)
portland %>% select(city,make,model,count) %>% filter(vehicle_registration_flat_file_SOS$city == 'Portland')
portland <- vehicle_registration_flat_file_SOS %>% select(city,make,model,count) %>% filter(vehicle_registration_flat_file_SOS$city == 'Portland')
View(portland)
